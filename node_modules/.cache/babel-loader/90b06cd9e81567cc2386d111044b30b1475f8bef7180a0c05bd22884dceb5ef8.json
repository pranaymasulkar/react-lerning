{"ast":null,"code":"var _jsxFileName = \"/Users/pranaymasulkar/Desktop/My_Projects/Git Project/react-lerning/src/Components/DemoClass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoClass = () => {\n  _s();\n  const [data, setData] = useState(0);\n  useEffect(() => {}, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const jsondata = await response.json();\n      setData(jsondata);\n    } catch (error) {\n      console.log(\"Data Not Found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: \"holder.js/100px180\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Go somewhere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(DemoClass, \"tiD3YHRqFKofP+PBuWWHdR+MjxU=\");\n_c = DemoClass;\nexport default DemoClass;\nvar _c;\n$RefreshReg$(_c, \"DemoClass\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Fragment","_Fragment","jsxDEV","_jsxDEV","DemoClass","_s","data","setData","fetchData","response","fetch","jsondata","json","error","console","log","children","map","item","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","name","Text","id","_c","$RefreshReg$"],"sources":["/Users/pranaymasulkar/Desktop/My_Projects/Git Project/react-lerning/src/Components/DemoClass.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nconst DemoClass = () => {\n  const [data, setData] = useState(0);\n\n  useEffect(() => {}, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      const jsondata = await response.json();\n      setData(jsondata);\n    } catch (error) {\n      console.log(\"Data Not Found\");\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {data.map((item) => (\n          <Card key={item.id}>\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n            <Card.Body>\n              <Card.Title>{item.name}</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n              <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default DemoClass;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnCC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EAEvB,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4CACF,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCL,OAAO,CAACI,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEZ,OAAA,CAAAF,SAAA;IAAAe,QAAA,eACEb,OAAA;MAAAa,QAAA,EACGV,IAAI,CAACW,GAAG,CAAEC,IAAI,iBACbf,OAAA,CAACL,IAAI;QAAAkB,QAAA,gBACHb,OAAA,CAACL,IAAI,CAACqB,GAAG;UAACC,OAAO,EAAC,KAAK;UAACC,GAAG,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnDtB,OAAA,CAACL,IAAI,CAAC4B,IAAI;UAAAV,QAAA,gBACRb,OAAA,CAACL,IAAI,CAAC6B,KAAK;YAAAX,QAAA,EAAEE,IAAI,CAACU;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eACpCtB,OAAA,CAACL,IAAI,CAAC+B,IAAI;YAAAb,QAAA,EAAC;UAGX;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACZtB,OAAA,CAACJ,MAAM;YAACqB,OAAO,EAAC,SAAS;YAAAJ,QAAA,EAAC;UAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA,GATHP,IAAI,CAACY,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACpB,EAAA,CApCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}